name: Build and publish for Windows with CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Generate Tag name for release
      run: |
        echo "tag=$(Get-Date -Format 'yyyy-MM-dd_HHmmss')" >> $ENV:GITHUB_OUTPUT
      id: release_tag

    - name: find .exe file
      run: |
        (Get-ChildItem -Path {{github.workspace}} -Filter *.exe).FullName

    - name: Add Tag to Commit
      run: |
        git tag ${{ steps.release_tag.outputs.tag }}
        git push origin ${{ steps.release_tag.outputs.tag }}
  
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{github.workspace}}\build\Release\win32-error-output-stream-test.exe
        tag_name: ${{ steps.release_tag.outputs.tag }}
